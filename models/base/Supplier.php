<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "t_supplier".
 *
 * @property integer $id_user
 * @property string $id_provinsi
 * @property string $id_kota
 * @property string $nama_supplier
 * @property string $alamat
 * @property string $telepon
 * @property string $latitude
 * @property string $longitude
 * @property string $rekomendasi_homei
 * @property string $created_at
 * @property string $updated_at
 * @property string $deleted_at
 * @property integer $created_by
 * @property integer $updated_by
 * @property integer $deleted_by
 * @property integer $flag
 * @property integer $id
 * @property string $aliasModel
 */
abstract class Supplier extends \yii\db\ActiveRecord
{
    /**
     * BaseModel rules. 
     **/
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_supplier';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \app\components\behaviors\UUIDBehavior::class,
                'model' => get_called_class(),
                'primaryKey' => 'id',
            ],
            [
                'class' => BlameableBehavior::className(),
            ],
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => date("Y-m-d H:i:s"),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id_user', 'created_by', 'updated_by', 'deleted_by', 'flag'], 'integer'],
            [['id_provinsi', 'id_kota', 'nama_supplier', 'alamat', 'telepon', 'latitude', 'longitude'], 'required'],
            [['alamat'], 'string'],
            [['created_at', 'updated_at', 'deleted_at'], 'safe'],
            [['id_provinsi'], 'string', 'max' => 2],
            [['id_kota'], 'string', 'max' => 4],
            [['nama_supplier'], 'string', 'max' => 100],
            [['telepon', 'latitude', 'longitude', 'rekomendasi_homei'], 'string', 'max' => 20],
            [['id'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'id_user' => Yii::t('models', 'User'),
            'id_provinsi' => Yii::t('models', 'Provinsi'),
            'id_kota' => Yii::t('models', 'Kota'),
            'nama_supplier' => Yii::t('models', 'Nama Supplier'),
            'alamat' => Yii::t('models', 'Alamat'),
            'telepon' => Yii::t('models', 'Telepon'),
            'latitude' => Yii::t('models', 'Latitude'),
            'longitude' => Yii::t('models', 'Longitude'),
            'rekomendasi_homei' => Yii::t('models', 'Rekomendasi Homei'),
            'created_at' => Yii::t('models', 'Dibuat pada'),
            'updated_at' => Yii::t('models', 'Diubah Pada'),
            'deleted_at' => Yii::t('models', 'Dihapus pada'),
            'created_by' => Yii::t('models', 'Dibuat oleh'),
            'updated_by' => Yii::t('models', 'Diubah oleh'),
            'deleted_by' => Yii::t('models', 'Dihapus oleh'),
            'flag' => Yii::t('models', 'Flag'),
        ];
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'id_user',
            'id_provinsi',
            'id_kota',
            'nama_supplier',
            'alamat',
            'telepon',
            'latitude',
            'longitude',
            'rekomendasi_homei',
            'created_at',
            'updated_at',
            'deleted_at',
            'created_by',
            'updated_by',
            'deleted_by',
            'flag',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if(isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function($model) {
                return $model->id;
            };
        endif;
        if(isset($parent['id_user'])) :
            unset($parent['id_user']);
            $parent['id_user'] = function($model) {
                return $model->id_user;
            };
        endif;
        if(isset($parent['id_provinsi'])) :
            unset($parent['id_provinsi']);
            $parent['id_provinsi'] = function($model) {
                return $model->id_provinsi;
            };
        endif;
        if(isset($parent['id_kota'])) :
            unset($parent['id_kota']);
            $parent['id_kota'] = function($model) {
                return $model->id_kota;
            };
        endif;
        if(isset($parent['nama_supplier'])) :
            unset($parent['nama_supplier']);
            $parent['nama_supplier'] = function($model) {
                return $model->nama_supplier;
            };
        endif;
        if(isset($parent['alamat'])) :
            unset($parent['alamat']);
            $parent['alamat'] = function($model) {
                return $model->alamat;
            };
        endif;
        if(isset($parent['telepon'])) :
            unset($parent['telepon']);
            $parent['telepon'] = function($model) {
                return $model->telepon;
            };
        endif;
        if(isset($parent['latitude'])) :
            unset($parent['latitude']);
            $parent['latitude'] = function($model) {
                return $model->latitude;
            };
        endif;
        if(isset($parent['longitude'])) :
            unset($parent['longitude']);
            $parent['longitude'] = function($model) {
                return $model->longitude;
            };
        endif;
        if(isset($parent['rekomendasi_homei'])) :
            unset($parent['rekomendasi_homei']);
            $parent['rekomendasi_homei'] = function($model) {
                return $model->rekomendasi_homei;
            };
        endif;
        if(isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function($model) {
                return \app\helpers\DateTimeHelper::toReadableDate($model->created_at, false);
            };
        endif;
        if(isset($parent['updated_at'])) :
            unset($parent['updated_at']);
            $parent['updated_at'] = function($model) {
                return \app\helpers\DateTimeHelper::toReadableDate($model->updated_at, false);
            };
        endif;
        if(isset($parent['deleted_at'])) :
            unset($parent['deleted_at']);
            $parent['deleted_at'] = function($model) {
                return $model->deleted_at;
            };
        endif;
        if(isset($parent['created_by'])) :
            unset($parent['created_by']);
            $parent['created_by'] = function($model) {
                return $model->created_by;
            };
        endif;
        if(isset($parent['updated_by'])) :
            unset($parent['updated_by']);
            $parent['updated_by'] = function($model) {
                return \app\helpers\DateTimeHelper::toReadableDate($model->updated_by, false);
            };
        endif;
        if(isset($parent['deleted_by'])) :
            unset($parent['deleted_by']);
            $parent['deleted_by'] = function($model) {
                return $model->deleted_by;
            };
        endif;
        if(isset($parent['flag'])) :
            unset($parent['flag']);
            $parent['flag'] = function($model) {
                return $model->flag;
            };
        endif;



        return $parent;
    }


    public static function faker($count = 10){
        $faker= \Faker\Factory::create();
        $faker->addProvider(new \app\components\faker\provider\MyImage($faker));
        $data = [];
        $maxId = static::find()->max('id');

        // relational data
        for ($i = 0; $i < $count; $i++) {
            $data[] = [ 
                "id_user" => $faker->unique()->numberBetween($maxId, $maxId + $count),
                "id_provinsi" => $faker->unique()->numberBetween($maxId, $maxId + $count),
                "id_kota" => $faker->unique()->numberBetween($maxId, $maxId + $count),
                "nama_supplier" => $faker->name,
                "alamat" => $faker->address,
                "telepon" => $faker->text(),
                "latitude" => $faker->text(),
                "longitude" => $faker->text(),
                "rekomendasi_homei" => $faker->text(),
                "created_at" => $faker->dateTime(),
                "updated_at" => $faker->dateTime(),
                "deleted_at" => $faker->dateTime(),
                "created_by" => $faker->randomNumber(),
                "updated_by" => $faker->randomNumber(),
                "deleted_by" => $faker->randomNumber(),
                "flag" => $faker->numberBetween(0, 1),
                "id" => $faker->unique()->numberBetween($maxId, $maxId + $count),
            ];
        }
        return $data;
    }

}
