<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\models\base;

use Yii;

/**
 * This is the base-model class for table "t_master_pembayaran".
 *
 * @property string $nomor_rekening
 * @property string $nama_bank
 * @property string $atas_nama
 * @property string $keterangan
 * @property integer $status
 * @property integer $id
 * @property string $aliasModel
 */
abstract class MasterPembayaran extends \yii\db\ActiveRecord
{
    /**
     * BaseModel rules. 
     **/
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 't_master_pembayaran';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => \app\components\behaviors\UUIDBehavior::class,
                'model' => get_called_class(),
                'primaryKey' => 'id',
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['nomor_rekening', 'nama_bank', 'atas_nama'], 'required'],
            [['keterangan'], 'string'],
            [['status'], 'integer'],
            [['nomor_rekening', 'nama_bank', 'atas_nama'], 'string', 'max' => 255],
            [['id'], 'unique']
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'nomor_rekening' => 'Nomor Rekening',
            'nama_bank' => 'Nama Bank',
            'atas_nama' => 'Atas Nama',
            'keterangan' => 'Keterangan',
            'status' => 'Status',
        ];
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'nomor_rekening',
            'nama_bank',
            'atas_nama',
            'keterangan',
            'status',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if(isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function($model) {
                return $model->id;
            };
        endif;
        if(isset($parent['nomor_rekening'])) :
            unset($parent['nomor_rekening']);
            $parent['nomor_rekening'] = function($model) {
                return $model->nomor_rekening;
            };
        endif;
        if(isset($parent['nama_bank'])) :
            unset($parent['nama_bank']);
            $parent['nama_bank'] = function($model) {
                return $model->nama_bank;
            };
        endif;
        if(isset($parent['atas_nama'])) :
            unset($parent['atas_nama']);
            $parent['atas_nama'] = function($model) {
                return $model->atas_nama;
            };
        endif;
        if(isset($parent['keterangan'])) :
            unset($parent['keterangan']);
            $parent['keterangan'] = function($model) {
                return $model->keterangan;
            };
        endif;
        if(isset($parent['status'])) :
            unset($parent['status']);
            $parent['status'] = function($model) {
                return $model->status;
            };
        endif;



        return $parent;
    }


    public static function faker($count = 10){
        $faker= \Faker\Factory::create();
        $faker->addProvider(new \app\components\faker\provider\MyImage($faker));
        $data = [];
        $maxId = static::find()->max('id');

        // relational data
        for ($i = 0; $i < $count; $i++) {
            $data[] = [ 
                "nomor_rekening" => $faker->text(),
                "nama_bank" => $faker->name,
                "atas_nama" => $faker->name,
                "keterangan" => $faker->paragraphs($nb = 3, $asText = true),
                "status" => $faker->text(),
                "id" => $faker->unique()->numberBetween($maxId, $maxId + $count),
            ];
        }
        return $data;
    }

}
