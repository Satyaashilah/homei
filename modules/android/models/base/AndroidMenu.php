<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\modules\android\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "android_menu".
 *
 * @property integer $id
 * @property integer $id_category
 * @property string $name
 * @property string $label
 * @property string $type
 * @property string $icon
 * @property integer $need_login
 * @property string $navigation
 * @property integer $order
 * @property string $params
 * @property string $created_at
 *
 * @property \app\modules\android\models\AndroidMenuKategori $kategori
 * @property string $aliasModel
 */
abstract class AndroidMenu extends \yii\db\ActiveRecord
{
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'android_menu';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => false,
                'value' => date("Y-m-d H:i:s"),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id_category', 'name', 'label', 'type', 'navigation'], 'required'],
            [['id_category', 'need_login', 'order'], 'integer'],
            [['params'], 'string'],
            [['created_at'], 'safe'],
            [['name', 'label', 'navigation'], 'string', 'max' => 100],
            [['type'], 'string', 'max' => 255],
            [['icon'], 'string', 'max' => 150],
            [['id_category'], 'exist', 'skipOnError' => true, 'targetClass' => \app\modules\android\models\AndroidMenuKategori::class, 'targetAttribute' => ['id_category' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'id_category' => Yii::t('models', 'Kategori'),
            'name' => Yii::t('models', 'Name'),
            'label' => Yii::t('models', 'Label'),
            'type' => Yii::t('models', 'Type'),
            'icon' => Yii::t('models', 'Icon'),
            'need_login' => Yii::t('models', 'Need Login'),
            'navigation' => Yii::t('models', 'Navigation'),
            'order' => Yii::t('models', 'Order'),
            'params' => Yii::t('models', 'Params'),
            'created_at' => 'Dibuat pada',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getKategori()
    {
        return $this->hasOne(\app\modules\android\models\AndroidMenuKategori::class, ['id' => 'id_category']);
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'id_category',
            'name',
            'label',
            'type',
            'icon',
            'need_login',
            'navigation',
            'order',
            'params',
            'created_at',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['id_category'])) :
            unset($parent['id_category']);
            $parent['id_category'] = function ($model) {
                return $model->id_category;
            };
            $parent['_kategori'] = function ($model) {
                $rel = $model->kategori;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;
        if (isset($parent['name'])) :
            unset($parent['name']);
            $parent['name'] = function ($model) {
                return $model->name;
            };
        endif;
        if (isset($parent['label'])) :
            unset($parent['label']);
            $parent['label'] = function ($model) {
                return $model->label;
            };
        endif;
        if (isset($parent['type'])) :
            unset($parent['type']);
            $parent['type'] = function ($model) {
                return $model->type;
            };
        endif;
        if (isset($parent['icon'])) :
            unset($parent['icon']);
            $parent['icon'] = function ($model) {
                return \Yii::$app->formatter->asMyImage($model->icon, false);
            };
        endif;
        if (isset($parent['need_login'])) :
            unset($parent['need_login']);
            $parent['need_login'] = function ($model) {
                return $model->need_login;
            };
        endif;
        if (isset($parent['navigation'])) :
            unset($parent['navigation']);
            $parent['navigation'] = function ($model) {
                return $model->navigation;
            };
        endif;
        if (isset($parent['order'])) :
            unset($parent['order']);
            $parent['order'] = function ($model) {
                return $model->order;
            };
        endif;
        if (isset($parent['params'])) :
            unset($parent['params']);
            $parent['params'] = function ($model) {
                return $model->params;
            };
        endif;
        if (isset($parent['created_at'])) :
            unset($parent['created_at']);
            $parent['created_at'] = function ($model) {
                return \app\helpers\DateTimeHelper::toReadableDate($model->created_at, false);
            };
        endif;



        return $parent;
    }


    public function faker()
    {
        $faker = \Faker\Factory::create();
        $data = [
            "id" => $faker->unique()->randomNumber(11),
            "id_category" => \app\components\Constant::getRandomFrom(\app\components\Constant::getIDs(\app\modules\android\models\AndroidMenuKategori::find()->select('id')->all(), 'id')),
            "name" => $faker->name,
            "label" => $faker->randomNumber(),
            "type" => $faker->randomNumber(),
            "icon" => $faker->randomNumber(),
            "need_login" => $faker->unique()->randomNumber(11),
            "navigation" => $faker->randomNumber(),
            "order" => $faker->unique()->randomNumber(11),
            "params" => $faker->randomNumber(),
            "created_at" => $faker->dateTime(),
        ];
        return $data;
    }
}
