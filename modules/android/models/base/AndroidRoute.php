<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\modules\android\models\base;

use Yii;

/**
 * This is the base-model class for table "android_route".
 *
 * @property integer $id
 * @property string $nama_route
 * @property string $params
 * @property string $keterangan
 * @property integer $butuh_login
 * @property integer $flag
 * @property string $aliasModel
 */
abstract class AndroidRoute extends \yii\db\ActiveRecord
{
    /**
     * BaseModel rules. 
     **/
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'android_route';
    }

    /**
     * @inheritdoc
     */
    function behaviors()
    {
        return [
            'uuid' => [
                'class' => '\app\components\behaviors\UUIDBehavior',
                'primaryKey' => 'id',
                'model' => get_called_class(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['nama_route'], 'required'],
            [['params', 'keterangan'], 'string'],
            [['butuh_login', 'flag'], 'integer'],
            [['nama_route'], 'string', 'max' => 100]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('models', 'ID'),
            'nama_route' => Yii::t('models', 'Nama Route'),
            'params' => Yii::t('models', 'Params'),
            'keterangan' => Yii::t('models', 'Keterangan'),
            'butuh_login' => Yii::t('models', 'Butuh Login'),
            'flag' => Yii::t('models', 'Flag'),
        ];
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'nama_route',
            'params',
            'keterangan',
            'butuh_login',
            'flag',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if (isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function ($model) {
                return $model->id;
            };
        endif;
        if (isset($parent['nama_route'])) :
            unset($parent['nama_route']);
            $parent['nama_route'] = function ($model) {
                return $model->nama_route;
            };
        endif;
        if (isset($parent['params'])) :
            unset($parent['params']);
            $parent['params'] = function ($model) {
                return $model->params;
            };
        endif;
        if (isset($parent['keterangan'])) :
            unset($parent['keterangan']);
            $parent['keterangan'] = function ($model) {
                return $model->keterangan;
            };
        endif;
        if (isset($parent['butuh_login'])) :
            unset($parent['butuh_login']);
            $parent['butuh_login'] = function ($model) {
                return $model->butuh_login;
            };
        endif;
        if (isset($parent['flag'])) :
            unset($parent['flag']);
        // $parent['flag'] = function ($model) {
        //     return $model->flag;
        // };
        endif;



        return $parent;
    }


    public static function faker($count = 10)
    {
        $faker = \Faker\Factory::create();
        $faker->addProvider(new \app\components\faker\provider\MyImage($faker));
        $data = [];
        $maxId = static::find()->max('id');

        // relational data
        for ($i = 0; $i < $count; $i++) {
            $data[] = [
                "id" => $faker->unique()->numberBetween($maxId, $maxId + $count),
                "nama_route" => $faker->name,
                "params" => $faker->text(),
                "keterangan" => $faker->paragraphs($nb = 3, $asText = true),
                "butuh_login" => $faker->randomNumber(),
                "flag" => $faker->numberBetween(0, 1),
            ];
        }
        return $data;
    }
}
