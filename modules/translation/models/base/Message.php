<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build
// Modified by Defri Indra
// 2021

namespace app\modules\translation\models\base;

use Yii;

/**
 * This is the base-model class for table "message".
 *
 * @property integer $id
 * @property string $language
 * @property string $translation
 *
 * @property \app\modules\translation\models\SourceMessage $id0
 * @property string $aliasModel
 */
abstract class Message extends \yii\db\ActiveRecord
{
    use \app\traits\ModelTrait;

    const SCENARIO_CREATE = 'create';
    const SCENARIO_UPDATE = 'update';
    public $_render = [];

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'message';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id', 'language'], 'required'],
            [['id'], 'integer'],
            [['translation'], 'string'],
            [['language'], 'string', 'max' => 16],
            [['id', 'language'], 'unique', 'targetAttribute' => ['id', 'language']],
            [['id'], 'exist', 'skipOnError' => true, 'targetClass' => \app\modules\translation\models\SourceMessage::class, 'targetAttribute' => ['id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
        'id' => Yii::t('models', 'ID'),
        'language' => Yii::t('models', 'Language'),
        'translation' => Yii::t('models', 'Translation'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getId0()
    {
        return $this->hasOne(\app\modules\translation\models\SourceMessage::class, ['id' => 'id']);
    }





    public function scenarios()
    {
        $parent = parent::scenarios();

        $columns = [
            'id',
            'language',
            'translation',
        ];

        $parent[static::SCENARIO_CREATE] = $columns;
        $parent[static::SCENARIO_UPDATE] = $columns;
        return $parent;
    }

    /**
     * @inheiritance
     */
    public function fields()
    {
        $parent = parent::fields();

        if(isset($parent['id'])) :
            unset($parent['id']);
            $parent['id'] = function($model) {
                return $model->id;
            };
        endif;
        if(isset($parent['language'])) :
            unset($parent['language']);
            $parent['language'] = function($model) {
                return $model->language;
            };
        endif;
        if(isset($parent['translation'])) :
            unset($parent['translation']);
            $parent['translation'] = function($model) {
                return $model->translation;
            };
            $parent['_id0'] = function($model) {
                $rel = $model->id0;
                if ($rel) :
                    return $rel;
                endif;
                return null;
            };
        endif;



        return $parent;
    }


    public function faker(){
        $faker= \Faker\Factory::create();
        $data = [ 
            "id" => \app\components\Constant::getRandomFrom(\app\components\Constant::getIDs(\app\modules\translation\models\SourceMessage::find()->select('id')->all(), 'id')),
            "language" => $faker->randomNumber(),
            "translation" => $faker->randomNumber(),
        ];
        return $data;
    }

}
